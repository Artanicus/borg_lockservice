[tool.poetry]
name = "borg-lockservice"
version = "0.1.1"
description = "Service to manage locking borgbackup repositiories for remote sync processes such as an offsite sync of the repos."
authors = ["Jinna Kiisuo <jinna+git@nocturnal.fi>"]
license = "MIT"
readme = "README.md"
packages = [{include = "borg_lockservice"}]

[tool.poetry.dependencies]
python = "^3.11"
uvicorn = {extras = ["standard"], version = "^0.23.2"}
absl-py = "^1.4.0"
fastapi = "^0.109.1"
borgbackup = "^1.2.5"
aiocache = {extras = ["redis"], version = "^0.12.2"}
psutil = "^5.9.5"


[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
flake8 = "^6.1.0"
mypy = "^1.5.1"
types-pyyaml = "^6.0.12.11"
types-ujson = "^5.8.0.1"
types-psutil = "^5.9.5.16"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
borg_lockservice = 'borg_lockservice.service:run'
lockservice_envoy = 'borg_lockservice.envoy:run'

[tool.mypy]
follow_imports = "silent"
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "absl"
ignore_missing_imports = true
[[tool.mypy.overrides]]
module = "aiocache"
ignore_missing_imports = true
